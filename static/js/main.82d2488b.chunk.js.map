{"version":3,"sources":["app/home/QuoteBlockComponent.js","app/home/duck/types.js","app/home/themes.js","app/home/duck/reducers.js","app/home/duck/operations.js","app/home/duck/actions.js","app/home/duck/index.js","app/home/QuoteBlockContainer.js","app/App.js","reducers.js","store.js","index.js"],"names":["QuoteBlockComponent","props","class","this","theme","id","className","icon","faQuoteLeft","quote","faQuoteRight","author","href","faTwitter","onClick","requestNewQuote","React","Component","data","require","quoteIndex","Math","floor","random","length","themeIndex","THEMES","INITIAL_STATE","themes","requestNewQuoteAction","quoteObject","type","types","dispatch","getState","state","home","homeReducer","action","Object","assign","QuoteBlockContainer","connect","homeOperations","App","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"6rDA0CeA,E,YAjCX,WAAYC,GAAQ,qEACVA,I,sEAIN,OACI,yBAAKC,MAAK,0BAAqBC,KAAKF,MAAMG,QACtC,yBAAKF,MAAM,OACX,yBAAKG,GAAG,YAAYC,UAAU,gBAC1B,yBAAKA,UAAU,aACX,gCAAYA,UAAU,cAClB,uBAAGD,GAAG,QAAQC,UAAU,yBACpB,kBAAC,IAAD,CAAiBC,KAAMC,IAAaH,GAAG,aAAaC,UAAU,eAC7DH,KAAKF,MAAMQ,MACZ,kBAAC,IAAD,CAAiBF,KAAMG,IAAcL,GAAG,cAAcC,UAAU,gBAEpE,6BACA,4BAAQD,GAAG,SAASC,UAAU,gCAAgCH,KAAKF,MAAMU,SAG7E,yBAAKN,GAAG,oBACJ,uBAAGO,KAAK,+BAA+BP,GAAG,eAAc,kBAAC,IAAD,CAAiBE,KAAMM,OAC/E,4BAAQR,GAAG,YAAYS,QAASX,KAAKF,MAAMc,iBAA3C,sB,GAvBMC,IAAMC,W,OCNzB,EAFG,YCAH,GAAC,aAAc,YAAa,aAAc,eAAgB,eAAgB,cACzF,mBAAoB,aAAc,eAAgB,kBAAmB,qBAAsB,gBAAiB,qBCEtGC,EAAOC,EAAQ,IACfC,EAAaC,KAAKC,MAAMD,KAAKE,SAAWL,EAAKM,QAC7CC,EAAaJ,KAAKC,MAAMD,KAAKE,SAAWG,EAAOF,QAE/CG,EAAgB,CAClBT,KAAMA,EACNE,WAAYA,EACZX,MAAOS,EAAKE,GACZQ,OAAQF,EACRD,WAAYA,EACZrB,MAAOsB,EAAOD,ICXZI,ECAkB,SAACC,EAAaV,EAAYhB,EAAOqB,GAAjC,MAAiD,CACrEM,KAAMC,EACNvB,MAAOqB,EACPV,WAAYA,EACZhB,MAAOA,EACPqB,WAAYA,IDiBD,EApBO,WAClB,OAAO,SAACQ,EAAUC,GACd,IAAMC,EAAQD,IAAWE,KACrBhB,EAAaC,KAAKC,MAAMD,KAAKE,UAAYY,EAAMjB,KAAKM,OAAS,IAC7DJ,GAAce,EAAMf,YACpBA,IAGJ,IAAMX,EAAQ0B,EAAMjB,KAAKE,GAErBK,EAAaJ,KAAKC,MAAMD,KAAKE,UAAYY,EAAMP,OAAOJ,OAAS,IAC/DC,GAAcU,EAAMV,YACpBA,IAGJ,IAAMrB,EAAQ+B,EAAMP,OAAOH,GAC3BQ,EAASJ,EAAsBpB,EAAOW,EAAYhB,EAAOqB,MEjBlDY,EHaK,WAAkC,IAAjCF,EAAgC,uDAA1BR,EAAeW,EAAW,uCACjD,OAAQA,EAAOP,MACX,KAAKC,EACD,OAAOO,OAAOC,OAAO,GAAIL,EAAO,CAC5B1B,MAAO6B,EAAO7B,MACdW,WAAYkB,EAAOlB,WACnBK,WAAYa,EAAOb,WACnBrB,MAAOkC,EAAOlC,QAEtB,QACI,OAAO+B,IIJJM,EAFaC,aAhBJ,SAAAP,GACpB,MAAO,CACH1B,MAAO0B,EAAMC,KAAK3B,MAAMA,MACxBE,OAAQwB,EAAMC,KAAK3B,MAAME,OACzBP,MAAO+B,EAAMC,KAAKhC,UAIC,SAAA6B,GACvB,MAAO,CACHlB,gBAAiB,WACbkB,EAASU,SAKOD,CAA6C1C,GCF1D4C,G,kBAbb,WAAY3C,GAAQ,qEACZA,I,sEAIN,OACE,yBAAKK,UAAU,mBACb,kBAAC,EAAD,W,GARUU,IAAMC,Y,eCGT4B,EAJKC,YAAgB,CAChCV,KAAMC,ICEKU,EAFDC,YAAYH,EAAaI,YAAgBC,MCGvDC,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,OAEJM,SAASC,eAAe,W","file":"static/js/main.82d2488b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './quote-block.scss';\r\nimport './themes.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faQuoteLeft, faQuoteRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { render } from 'react-dom';\r\n\r\nclass QuoteBlockComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class={`container-fluid ${this.props.theme}`}>\r\n                <div class=\"row\">\r\n                <div id=\"quote-box\" className=\"card mx-auto\">\r\n                    <div className=\"card-body\">\r\n                        <blockquote className=\"blockquote\">\r\n                            <p id=\"quote\" className=\"text-center col-xs-10\">\r\n                                <FontAwesomeIcon icon={faQuoteLeft} id=\"quote-left\" className=\"quote-icon\"/>\r\n                                {this.props.quote}\r\n                                <FontAwesomeIcon icon={faQuoteRight} id=\"quote-right\" className=\"quote-icon\"/>\r\n                            </p>\r\n                            <br></br>\r\n                            <footer id=\"author\" className=\"blockquote-footer text-right\">{this.props.author}</footer>\r\n                        </blockquote>\r\n                        \r\n                        <div id=\"quote-box-footer\">\r\n                            <a href=\"www.twitter.com/intent/tweet\" id=\"tweet-quote\"><FontAwesomeIcon icon={faTwitter}/></a>\r\n                            <button id=\"new-quote\" onClick={this.props.requestNewQuote}>New quote</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default QuoteBlockComponent;\r\n","const NEW_QUOTE = 'NEW_QUOTE';\r\n\r\nexport default {\r\n    NEW_QUOTE,\r\n};","export default ['lime-theme', 'red-theme', 'cyan-theme', 'purple-theme', 'yellow-theme', 'green-theme', \r\n'royal-blue-theme', 'pink-theme', 'orange-theme', 'dark-pink-theme', 'forest-green-theme', 'crimson-theme', 'dark-violet-theme'];","import types from './types.js';\r\nimport THEMES from '../themes.js';\r\n\r\nconst data = require('../../../quotes.json');\r\nconst quoteIndex = Math.floor(Math.random() * data.length);\r\nconst themeIndex = Math.floor(Math.random() * THEMES.length);\r\n\r\nconst INITIAL_STATE = {\r\n    data: data,\r\n    quoteIndex: quoteIndex,\r\n    quote: data[quoteIndex],\r\n    themes: THEMES,\r\n    themeIndex: themeIndex,\r\n    theme: THEMES[themeIndex]\r\n};\r\n\r\nconst homeReducer = (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case types.NEW_QUOTE: \r\n            return Object.assign({}, state, {\r\n                quote: action.quote,\r\n                quoteIndex: action.quoteIndex,\r\n                themeIndex: action.themeIndex,\r\n                theme: action.theme\r\n            });\r\n        default:       \r\n            return state;\r\n    };\r\n};\r\n\r\nexport default homeReducer;","import Creators from './actions.js';\r\n\r\nconst requestNewQuoteAction = Creators.requestNewQuote;\r\n\r\nconst generateQuote = () => {\r\n    return (dispatch, getState) => {\r\n        const state = getState().home;\r\n        let quoteIndex = Math.floor(Math.random() * (state.data.length - 1));\r\n        if (quoteIndex >= state.quoteIndex) {\r\n            quoteIndex++;\r\n        }\r\n        \r\n        const quote = state.data[quoteIndex];\r\n        \r\n        let themeIndex = Math.floor(Math.random() * (state.themes.length - 1));\r\n        if (themeIndex >= state.themeIndex) {\r\n            themeIndex++;\r\n        }\r\n        \r\n        const theme = state.themes[themeIndex];\r\n        dispatch(requestNewQuoteAction(quote, quoteIndex, theme, themeIndex));\r\n    };  \r\n};\r\n\r\nexport default {\r\n    generateQuote\r\n};","import types from './types.js';\r\n\r\nconst requestNewQuote = (quoteObject, quoteIndex, theme, themeIndex) => ({\r\n    type: types.NEW_QUOTE,\r\n    quote: quoteObject,\r\n    quoteIndex: quoteIndex,\r\n    theme: theme,\r\n    themeIndex: themeIndex\r\n});\r\n\r\nexport default { \r\n    requestNewQuote\r\n};","import homeReducer from './reducers';\r\nexport { default as homeOperations} from './operations';\r\nexport { default as homeTypes } from './types';\r\nexport default homeReducer; ","import QuoteBlockComponent from './QuoteBlockComponent';\r\nimport { connect } from 'react-redux';\r\nimport { homeOperations } from './duck';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        quote: state.home.quote.quote,\r\n        author: state.home.quote.author,\r\n        theme: state.home.theme\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        requestNewQuote: () => {\r\n            dispatch(homeOperations.generateQuote());\r\n        }\r\n    };\r\n};\r\n\r\nconst QuoteBlockContainer = connect(mapStateToProps, mapDispatchToProps)(QuoteBlockComponent);\r\n\r\nexport default QuoteBlockContainer;","import React from 'react';\nimport { Home } from './home';\nimport './app.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <Home />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport homeReducer from './app/home/duck';\r\n\r\nconst rootReducer = combineReducers({\r\n    home: homeReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}